name: Fabrication

on:
  push:
    branches:
      - main
    tags:
      - v*
    paths:
      - '**.kicad_sch'
      - '**.kicad_pcb'
      - '.github/workflows/*'
      - 'jlcpcb/*'
  pull_request:
    paths:
      - '**.kicad_sch'
      - '**.kicad_pcb'
      - '.github/workflows/*'
      - 'jlcpcb/*'

env:
  KIKIT: docker run --rm -v "$PWD/Kicad/RLab Keyboard:/pcb" -w /pcb --user $UID:$GROUPS yaqwsx/kikit kikit
  schema: Kicad/RLab Keyboard/RLab Keyboard.kicad_sch
  board: Kicad/RLab Keyboard/RLab Keyboard.kicad_pcb
  name: RLab Keyboard
  dir: output
  config: kibot.yml

jobs:
# checks
  ERC:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: INTI-CMNB/KiBot@v2_k8
        with:
          schema: ${{ env.schema }}
          board: ${{ env.board }}
          config: ${{ env.config }}
          skip: run_drc
          targets: __NONE__

  DRC:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: INTI-CMNB/KiBot@v2_k8
        with:
          schema: ${{ env.schema }}
          board: ${{ env.board }}
          config: ${{ env.config }}
          skip: run_erc
          targets: __NONE__

# documentation
  docs:
    runs-on: ubuntu-latest
    needs: [ ERC, DRC ]

    steps:
      - uses: actions/checkout@v4

      - uses: INTI-CMNB/KiBot@v2_k8
        with:
          install3D: YES
          schema: ${{ env.schema }}
          board: ${{ env.board }}
          config: ${{ env.config }}
          dir: ${{ env.dir }}
          skip: run_erc,run_drc
          targets: ibom.html octopart.csv schematic.pdf schematic.svg board_top.pdf board_bottom.pdf model.step

      - uses: actions/upload-artifact@v4
        if: ${{success()}}
        with:
          name: ${{github.event.repository.name}}_docs
          if-no-files-found: error
          path: |
            ${{env.dir}}/docs/**
            ${{env.dir}}/cad/**
            !${{env.dir}}/**/*.ogv
            !${{env.dir}}/**/*.log

  fabrications:
    name: Fabrication
    runs-on: ubuntu-latest
    needs: [ ERC, DRC ]

    steps:
    - uses: actions/checkout@v4

    - name: Export JLCPCB fabrication files
      run: |
        ${{ env.KIKIT }} fab jlcpcb --assembly --schematic "${{ env.schema }}" "${{ env.board }}" "${{ env.name }}"

    - name: upload results
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.name }}
        path: |
          ${{ env.name }}/*.zip
          ${{ env.name }}/*.csv

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: 
      - docs
      - fabrications

    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Download the built assets
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Package up the combined assets
      run: |
        find artifacts
        version=${GITHUB_REF_NAME}
        for asset in RLab Keyboard
        do
          for file in gerbers.zip bom.csv pos.csv
          do
            name=$(cut -d'.' -f1 <<< $file)
            ext=$(cut -d'.' -f2 <<< $file)
            mv artifacts/$asset/$file artifacts/$asset-$name-$version.$ext
          done
          rm -rf artifacts/$asset
        done
        mv artifacts/RLab Keyboard_docs/docs/RLab Keyboard-schematic.pdf artifacts/RLab Keyboard-schematic-$version.pdf
        mv artifacts/RLab Keyboard_docs/cad/RLab Keyboard.step artifacts/RLab Keyboard-$version.step
        for asset in RLab Keyboard_docs
        do
          rm -rf artifacts/$asset
        done
        find artifacts

    - name: Upload assets to latest release
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: ${{ contains(github.ref, '-rc') }}
        files: |
          artifacts/*.zip
          artifacts/*.csv
          artifacts/*.pdf
          artifacts/*.step
